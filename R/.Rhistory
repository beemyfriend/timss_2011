group_by(IDBOOK, students_per_book) %>%
count() %>%
.$students_per_book %>%
sum()
}) %>%
unlist()) %>%
mutate(
students_per_question_female = lapply(seq_along(.$data), function(i){
.$data[[i]] %>%
group_by(IDBOOK, students_per_book_female) %>%
count() %>%
.$students_per_book_female %>%
sum()
}) %>%
unlist()) %>%
mutate(
students_per_question_male = lapply(seq_along(.$data), function(i){
.$data[[i]] %>%
group_by(IDBOOK, students_per_book_male) %>%
count() %>%
.$students_per_book_male %>%
sum()
}) %>%
unlist()) %>%
#according to the math_itemalmanac I am off by about 5% fo each question
#but I actually think that the almanac is wrong
#at least when I compare the percent of each response for the multiple choice
#another posibility is that there was some kind of mix up with regards to the
#conversion of SAS/SPSS to R
mutate(
correct_ratio_per_question = lapply(seq_along(.$data), function(i){
tot_students  = .$students_per_question[i]
.$data[[i]] %>%
filter(student_gave_correct_answer) %>%
nrow()/tot_students
}) %>%
unlist()) %>%
mutate(
correct_ratio_per_question_female = lapply(seq_along(.$data), function(i){
tot_female = .$students_per_question_female[i]
.$data[[i]] %>%
filter(student_gave_correct_answer, ITSEX == 1) %>%
nrow()/ tot_female
}) %>%
unlist()) %>%
mutate(
correct_ratio_per_question_male = lapply(seq_along(.$data), function(i){
tot_male = .$students_per_question_male[i]
.$data[[i]] %>%
filter(student_gave_correct_answer, ITSEX == 2) %>%
nrow()/ tot_male
}) %>%
unlist()) %>%
unnest()}
clean_math <- function(df, cdbook){
df %>%
grab_math_questions() %>%
get_performance_score() %>%
get_book_info() %>%
combine_datasets(cdbook) %>%
get_question_info()}
chl_timss_math_11 <- clean_math(chl_achievement_11, achievement_codebook_11)
chl_timss_math_11 <- clean_math(chl_achievement_11, achievement_codebook_11)
rm(c(kor_achievement_11, ltu_achievement_11, usa_achievement_11))
rm(kor_achievement_11)
rm(usa_achievement_11)
rm(ltu_achievement_11)
timss_simple_student_model_11 <- function(x){
x %>%
group_by(IDSTUD, IDSCHOOL, ITSEX, benchmark_math_avg_value) %>%
nest() %>%
select(-data) %>%
mutate(IDSTUD = as.factor(IDSTUD)) %>%
mutate(IDSCHOOL = as.factor(IDSCHOOL)) %>%
mutate(ITSEX = as.factor(ITSEX)) %>%
mutate(benchmark_math_avg_value = as.factor(benchmark_math_avg_value))
}
names(chl_timss_math_11)
names(chl_timss_math_11)
timss_simple_student_model_11 <- function(x){
x %>%
group_by(IDSTUD, IDSCHOOL, ITSEX, benchmark_math_avg_value) %>%
nest() %>%
select(-data) %>%
mutate(IDSTUD = as.factor(IDSTUD)) %>%
mutate(IDSCHOOL = as.factor(IDSCHOOL)) %>%
mutate(ITSEX = as.factor(ITSEX)) %>%
mutate(benchmark_math_avg_value = as.factor(benchmark_math_avg_value))
}
timss_simple_question_model_11 <- function(x){
x %>%
group_by(question, corect_ratio_per_question) %>%
nest() %>%
mutate(
question_country_difficulty = sapply(correct_ratio_per_question, function(x){
if(x > .9){
'Really Easy'
} else if (x > .66){
'Easy'
} else if (x > .33){
'Normal'
} else if (x > .1){
'Difficult'
} else {
'Really Difficult'
}
})
) %>%
unnest() %>%
select(question, FIELD_LABL, content_domain, cognitive_domain,
question_country_difficulty, question_type) %>%
distinct() %>%
group_by(question) %>%
summarise_all(as.factor)
}
chl_simple_question <- timss_simple_question_model_11(chl_timss_math_11)
timss_simple_question_model_11 <- function(x){
x %>%
group_by(question, correct_ratio_per_question) %>%
nest() %>%
mutate(
question_country_difficulty = sapply(correct_ratio_per_question, function(x){
if(x > .9){
'Really Easy'
} else if (x > .66){
'Easy'
} else if (x > .33){
'Normal'
} else if (x > .1){
'Difficult'
} else {
'Really Difficult'
}
})
) %>%
unnest() %>%
select(question, FIELD_LABL, content_domain, cognitive_domain,
question_country_difficulty, question_type) %>%
distinct() %>%
group_by(question) %>%
summarise_all(as.factor)
}
chl_simple_question <- timss_simple_question_model_11(chl_timss_math_11)
chl_simple_question
library(topicmodels)
install.packages('topicmodels')
library(topicmodels)
?LDA
library(tidytext)
library(topicmodels)
data("AssociatedPress")
AssociatedPress
ap_lda <- LDA(AssociatedPress, k = 2, control = list(seed=1234))
ap_lda
library(tidytext)
ap_lda_td <- tidy(ap_lda)
ap_lda_td
ap_top_terms <- ap_lda_td %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
ap_top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_bar(stat = 'identity', show.legend = F) +
facet_wrap(~ topic, scales = 'free') +
coord_flip
ap_top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_bar(stat = 'identity', show.legend = F) +
facet_wrap(~ topic, scales = 'free') +
coord_flip()
ap_lda_td
beta_spread <- ap_lda_td %>%
mutate(topic = paste0('topic', topic)) %>%
spread(topic, beta) %>%
filter(topic1 > .001 | topic2 > .001) %>%
mutate(log_ratio = log2(topic2 / topic1))
beta_spread
names(beta_spread)
gg
beta_spread %>%
arrange(desc(log_ratio)) %>%
top_n(20, log_ratio)
beta_spread %>%
top_n(20, log_ratio) %>%
ggplot(aes(term, log_ratio)) +
geom_bar(stat = 'identity', show.legend = F) +
coord_flip()
beta_spread %>%
mutate(abs_log_ratio = abs(log_ratio))
beta_spread %>%
mutate(abs_log_ratio = abs(log_ratio))
beta_spread %>%
mutate(abs_log_ratio = abs(log_ratio)) %>%
top_n(20, abs_log_ratio) %>%
ggplot(aes(term, log_ratio)) +
geom_bar(stat = 'identity', show.legend = F) +
coord_flip()
beta_spread %>%
mutate(abs_log_ratio = abs(log_ratio)) %>%
top_n(20, abs_log_ratio) %>%
arrange(desc(log_ratio)) %>%
ggplot(aes(term, log_ratio)) +
geom_bar(stat = 'identity', show.legend = F) +
coord_flip()
str(beta_spread)
beta_spread %>%
mutate(abs_log_ratio = abs(log_ratio)) %>%
top_n(20, abs_log_ratio) %>%
arrange(desc(log_ratio)) %>%
ggplot(aes(factor(term), log_ratio)) +
geom_bar(stat = 'identity', show.legend = F) +
coord_flip()
beta_spread %>%
mutate(abs_log_ratio = abs(log_ratio)) %>%
top_n(20, abs_log_ratio) %>%
arrange(desc(log_ratio)) %>%
mutate(term = factor(term)) %>%
.$term %>%
levels()
beta_spread %>%
mutate(abs_log_ratio = abs(log_ratio)) %>%
top_n(20, abs_log_ratio) %>%
arrange(desc(log_ratio)) %>%
mutate(term = as.factor(term)) %>%
.$term %>%
levels()
beta_spread %>%
mutate(abs_log_ratio = abs(log_ratio)) %>%
top_n(20, abs_log_ratio) %>%
arrange(desc(log_ratio)) %>%
ggplot(aes(factor(term), log_ratio)) +
geom_bar(stat = 'identity', show.legend = F) +
coord_flip()
ap_gamma <- tidy(ap_lda, matrix = 'gamma')
ap_gamma
tidy(AssociatedPress) %>%
filter(document == 6) %>%
arnge(desc(count))
tidy(AssociatedPress) %>%
filter(document == 6) %>%
arrange(desc(count))
titles <- c('Twenty Thousand Leagues under the Sea', 'The War of the Worlds',
'Pride and Prejudice', 'Great Expectations')
library(gutenbergr)
books <- gutenberg_works(title %>% titles) %>%
gutenberg_download(meta_fields = 'title')
books <- gutenberg_works(title %in% titles) %>%
gutenberg_download(meta_fields = 'title')
str(books)
str(text)
str(books$text)
books
by_chapter <- books %>%
group_by(title) %>%
mutate(chapter = cumsum(str_detect(text, regex('^chapter ', ignore_case = T)))) %>%
ungroup() %>%
filter(chapter > 0) %>%
unite(document, title, chapter)
str(by_chapter)
by_chapter <- books %>%
group_by(title) %>%
mutate(chapter = cumsum(str_detect(text, regex('^chapter ', ignore_case = T)))) %>%
ungroup() %>%
filter(chapter > 0) %>%
unite(document, title, chapter)
str(by_chapter)
str(books)
by_chapter_word <- by_chapter %>%
unnest_tokens(word, text)
str(by_chapter_word)
word_counts <- by_chapter_word %>%
anti_join(stop_words) %>%
count(document, word, sort = T) %>%
ungroup()
word_counts
chapter_dtm <- word_counts %>%
cast_dtm(document, word, n)
chapter_dtm
chapter_lda <- LDA(chapter_dtm, k = 4, control = list(seed = 1234))
chapter_lda
chapter_lda_td <- tidy(chapter_lda)
chapter_lda_td
top_terms <- chpater_lda_td %>%
group_by(topic) %>%
top_n(5, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms <- chapter_lda_td %>%
group_by(topic) %>%
top_n(5, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms
top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_bar(stat = 'identity', show.leend = F) +
facet_wrap(~ topic, scales = 'free') +
coord_flip()
top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_bar(stat = 'identity', show.legend = F) +
facet_wrap(~ topic, scales = 'free') +
coord_flip()
chapter_lda_gamma <- tidy(chapter_lda, matrix = 'gamma')
chapter_lda_gamma
chapter_lda_gamma <- chapter_lda_gamma %>%
separate(document, c('title', 'chapter'), sep = '_', convert = T)
chapter_lda_gamma
chapter_lda_gamma %>%
mutate(title = reorder(title, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma)) +
geom_boxplot() +
facet_wrap(~ title)
chapter_classifications <- chapter_lda_gamma %>%
group_by(title, chapter) %>%
top_n(1, gamma) %>%
ungroup()
chapter_classifications
book_topics <- chapter_classifications %>%
count(title, topic) %>%
top_n(1, n) %>%
ungroup() %>%
transmute(consensus = title, topic)
book_topics
book_topics
chapter_classifications
chapter_classifications %>% count(title, topic)
chapter_classifications %>%
inner_join(book_topics, by = 'topic') %>%
filter( title != consensus)
assignments <- augment(chapter_lda, data = chapter_dtm)
assignments
chapters_dtm
chapter_dtm
chapter_dtm %>% names()
chapter_lda %>% names()
chapter_lda
assignments <- assignents %>%
separate(document, c('title', 'chapter'), sep = '_', convert = T) %>%
inner_join(book_topics, by = c('.topic' = 'topic'))
assignments <- assignments %>%
separate(document, c('title', 'chapter'), sep = '_', convert = T) %>%
inner_join(book_topics, by = c('.topic' = 'topic'))
assignments
assignments %>%
count(title, consensus, wt = count) %>%
spread(consensus, n, fill = 0)
wrong_words <- assignments %>%
filter(title != consensus)
wrong_words
wrong_words %>%
count(title, consensus, term, wt = count) %>%
ungroup() %>%
arrange(desc(n))
word_counts %>%
filter(word == 'flopson')
library(mallet)
install.packages("mallet")
library(mallet)
chl_simple_question
question_summary_word <- chl_simple_question %>%
unnest_tokens(word, FIELD_LABL)
timss_simple_question_model_11 <- function(x){
x %>%
group_by(question, correct_ratio_per_question) %>%
nest() %>%
mutate(
question_country_difficulty = sapply(correct_ratio_per_question, function(x){
if(x > .9){
'Really Easy'
} else if (x > .66){
'Easy'
} else if (x > .33){
'Normal'
} else if (x > .1){
'Difficult'
} else {
'Really Difficult'
}
})
) %>%
unnest() %>%
select(question, FIELD_LABL, content_domain, cognitive_domain,
question_country_difficulty, question_type) %>%
distinct() %>%
group_by(question, FIELD_LABL) %>%
summarise_all(as.factor)
}
chl_simple_question <- timss_simple_question_model_11(chl_timss_math_11)
question_summary_word <- chl_simple_question %>%
unnest_tokens(word, FIELD_LABL)
question_summary_word
question_summary_word %>% select(question, word)
names(by_chapter)
qs_word_counts <- question_summary_word %>%
anti_join(stop_words) %>%
count(question, word, sort = T)
qs_word_counts
qs_dtm <- qs_word_counts %>%
cast_dtm(document, word, n)
qs_dtm <- qs_word_counts %>%
cast_dtm(question, word, n)
qs_lda <- LDA(qs_dtm, k = 2, control = list(seed = 1))
qs_lda
qs_lda_td <- tidy(qs_lda)
qs_lda_td
dir
dir()
school_codebook <- readxl::read_excel('bcgtmsm5.xls')
names(school_codebook)
head(school_codebook)
school_codebook %>% select(FIELD_VALI, FIELD_CODE, FIELD_EDIT, FIELD_CARR, ORDER_SCRN, order_file, comment1)
school_codebook %>% select(FIELD_VALI, FIELD_CODE, FIELD_EDIT, FIELD_CARR, ORDER_SCRN, ORDER_FILE, COMMENT1)
school_codebook %>% select( FIELD_CODE, FIELD_EDIT, FIELD_CARR, ORDER_SCRN, ORDER_FILE, COMMENT1)
school_codebook %>% select( FIELD_EDIT, FIELD_CARR, ORDER_SCRN, ORDER_FILE, COMMENT1)
names(school_codebook)
head(school_codebook)
school_codebook %>% select( MEAS_CLASS, IDBOOK, FMT, DUMMY, VALID_VAL)
head(school_codebook)
school_codebook %>% select( MIN_Max, FILTER_VAR, FILTER_CND, CONFIRMED)
school_codebook %>% select( MIN_Max, FILTER_VAR, FILTER_CND, CONFIRMED)
school_codebook %>% select( MIN_Max, FILTER_VAR, FILTER_CND, CONFIRMED)
school_codebook %>% select( MIN_MAX, FILTER_VAR, FILTER_CND, CONFIRMED)
school_codebook <- readxl::read_excel('bcgtmsm5.xls') %>%
select(FIELD_NAME, FIELD_LABL)
school_codebook
school_codebook <- readxl::read_excel('bcgtmsm5.xls') %>%
select(FIELD_NAME, FIELD_LABL) %>%
filter(FIELD_NAME %in% c('BCBG02','BCBG03A', 'BCBG03B', 'BCBG04', 'BCBG07', 'BCBG10BB'))
school_codebook
school_codebook <- readxl::read_excel('bcgtmsm5.xls')
school_codebook %>% filter(FIELD_NA<E =='BCBG02')
school_codebook %>% filter(FIELD_NAME =='BCBG02')
school_codebook %>% filter(FIELD_NAME =='BCBG02') %>% select(FIELD_VALI)
school_codebook %>% filter(FIELD_NAME =='BCBG02') %>% select(FIELD_CODE)
school_codebook %>% filter(FIELD_NAME =='BCBG02') %>% select(DEFAULT)
school_codebook %>% filter(FIELD_NAME =='BCBG02') %>% select(IDBOOK)
school_codebook %>% filter(FIELD_NAME =='BCBG02') %>% select(VALID_VAL)
school_codebook %>% filter(FIELD_NAME =='BCBG02')
school_codebook %>% filter(FIELD_NAME =='BCBG03A') %>%
select(FIEld_VALi)
select(FIELD_VALi)
school_codebook %>% filter(FIELD_NAME =='BCBG03A') %>% select(FIELD_VALI)
school_codebook %>% filter(FIELD_NAME =='BCBG03A') %>% select(FIELD_CODE)
school_codebook <- readxl::read_excel('bcgtmsm5.xls') %>%
select(FIELD_NAME, FIELD_LABL, FIELD_CODE) %>%
filter(FIELD_NAME %in% c('BCBG02','BCBG03A', 'BCBG03B', 'BCBG04', 'BCBG07', 'BCBG10BB'))
school_codebook
school_codebook
school_codebook$FIELD_CODE
school_codebook
school_general <- haven::read_spss('bcgchlm5.sav')
school_general
c('hi', 'by', 'there') + c('hi')
school_codebook <- readxl::read_excel('bcgtmsm5.xls') %>%
select(FIELD_NAME, FIELD_LABL, FIELD_CODE) %>%
filter(FIELD_NAME %in% c('IDSCHOOL', 'BCBG02','BCBG03A', 'BCBG03B', 'BCBG04', 'BCBG07', 'BCBG10BB'))
school_codebook
names(school_general)
school_general <- haven::read_spss('bcgchlm5.sav') %>%
select_(school_questions)
school_questions <- c('IDSCHOOL', 'BCBG02','BCBG03A', 'BCBG03B', 'BCBG04', 'BCBG07', 'BCBG10BB')
school_general <- haven::read_spss('bcgchlm5.sav') %>%
select_(school_questions)
school_general
school_general <- haven::read_spss('bcgchlm5.sav') %>%
select_(names(.) %in% school_questions)
school_general <- haven::read_spss('bcgchlm5.sav') %>%
select(names(.) %in% school_questions)
school_general <- haven::read_spss('bcgchlm5.sav') %>%
select(names(.)[names(.) %in% school_questions])
school_general <- haven::read_spss('bcgchlm5.sav') %>%
select_(names(.)[names(.) %in% school_questions])
school_general
?select_
school_general <- haven::read_spss('bcgchlm5.sav') %>%
select_(,dots = names(.)[names(.) %in% school_questions])
school_general <- haven::read_spss('bcgchlm5.sav') %>%
select_(.dots = names(.)[names(.) %in% school_questions])
school_general
?gather
school_general <- haven::read_spss('bcgchlm5.sav') %>%
select_(.dots = names(.)[names(.) %in% school_questions]) %>%
gather(question, answer, -IDSCHOOL)
school_general
school_general %>% tail
school_codebook
school_general
?right_join
school_general <- haven::read_spss('bcgchlm5.sav') %>%
select_(.dots = names(.)[names(.) %in% school_questions]) %>%
gather(question, answer, -IDSCHOOL) %>%
right_join(by = c('question = FIELD_NA<E'))
school_general <- haven::read_spss('bcgchlm5.sav') %>%
select_(.dots = names(.)[names(.) %in% school_questions]) %>%
gather(question, answer, -IDSCHOOL) %>%
right_join(by = c('question = FIELD_NAME'))
school_general <- haven::read_spss('bcgchlm5.sav') %>%
select_(.dots = names(.)[names(.) %in% school_questions]) %>%
gather(question, answer, -IDSCHOOL) %>%
right_join(school_codebook, by = c('question = FIELD_NAME'))
names(school_general, 10)
names(school_general) %>% head(10)
school_general %>% head(10)
school_general %>% head(20)
write_csv(chl_timss_math_11, '2011_TIMSS_CHILE.csv')
