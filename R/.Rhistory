set.seed(1)
timss_student_svm <- function(model){
train <- sample(nrow(model), nrow(model)/2)
#factors with more than 2 levels like school need to be turned into a yes/no matrix
model <- model %>%
mutate(count = 1) %>%
spread(IDSCHOOL, count, fill = 0)
svm_train <- model[train,]
svm_test <- model[-train,]
out = svm(benchmark_math_avg_value~.-IDSTUD, data = svm_train, kernel='linear', cost = 10)
pred.te = predict(out, newdata = svm_test)
table(pred.te, svm_test$benchmark_math_avg_value)
}
analyze_model(chile_simple_student_11, timss_student_nb)
analyze_model(chile_simple_student_11, timss_student_svm())
analyze_model(chile_simple_student_11, timss_student_svm)
analyze_model(chile_simple_student_11, timss_student_svm)
svm_model_simple_adjusted <- analyze_mode(chile_simple_student_adjusted_11, timss_student_svm)
svm_model_simple_adjusted <- analyze_model(chile_simple_student_adjusted_11, timss_student_svm)
svm_model_simple_adjusted
chile_student_school_11 %>% str()
str(chile_simple_student_11)
str(chile_student_school_11)
str(chile_student_teacher_11
)
str(chile_student_student_11)
str(chile_student_school_11)
chile_student_school_11 %>% filter(f = is.factor)
chile_student_school_11 %>% Filter(f = is.factor)
chile_student_school_11 %>% Filter(f = is.factor) %>% names()
css_factors <- chile_student_school_11 %>%
select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
css_factors
for(i in css_factors){
cat(i)
}
for(i in css_factors){
cat(paste(i, '\n'))
}
?mutate()
prep_for_svm <- function(df){
svm_factors <- df %>%
select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df <- df %>%
mutate_(svm_factors[i] = str_c(i, '_', svm_factors[i]))
}
df
}
prep_for_svm <- function(df){
svm_factors <- df %>%
select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df <- df %>%
mutate_(svm_factors[i] = str_c(i, '_', svm_factors[i]))
}
df
}
prep_for_svm <- function(df){
svm_factors <- df %>%
select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df <- df %>%
mutate_(svm_factors[i] = str_c(i, '_', svm_factors[i]))
}
df
}
?mutate_
prep_for_svm <- function(df){
svm_factors <- df %>%
select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df <- df %>%
mutate(quote(svm_factors[i]) = str_c(i, '_', quote(svm_factors[i])))
}
df
}
prep_for_svm <- function(df){
svm_factors <- df %>%
select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df = df %>%
mutate(quote(svm_factors[i]) = str_c(i, '_', quote(svm_factors[i])))
}
df
}
chile_student_school_11 %>% str
chile_student_school_11['BCBG07']
prep_for_svm <- function(df){
svm_factors <- df %>%
select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df = df %>%
mutate(quote(svm_factors[i]) = sapply(df[quote(svm_factors[i])], function(x){
str_c(i, '_', x)
}))}
df
}
prep_for_svm <- function(df){
svm_factors <- df %>%
select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df <- df %>%
mutate(quote(svm_factors[i]) = sapply(df[quote(svm_factors[i])], function(x){
str_c(i, '_', x)
}))}
df
}
prep_for_svm <- function(df){
svm_factors <- df %>%
select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df <- df %>%
mutate(quote(svm_factors[i]) <- sapply(df[quote(svm_factors[i])], function(x){
str_c(i, '_', x)
}))}
df
}
prep_for_svm(chile_student_school_11)
prep_for_svm <- function(df){
svm_factors <- df %>%
select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df[quote(svm_factors[i])] <- sapply(df[quote(svm_factors[i])], function(x){
str_c(i, '_', x)
})}
df
}
prep_for_svm(chile_student_school_11)
quote(names(chile_student_school_11)[5])
names(chile_student_school_11)[5]
prep_for_svm <- function(df){
svm_factors <- df %>%
select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df[svm_factors[i]] <- sapply(df[svm_factors[i]], function(x){
str_c(i, '_', x)
})}
df
}
prep_for_svm(chile_student_school_11)
prep_for_svm <- function(df){
svm_factors <- df %>%
select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df[svm_factors[i]] <- sapply(df[svm_factors[i]], function(x){
str_c(i, '_', x)
})
df %>%
mutate(count = 1) %>%
spread_(svm_factors[i], count, fill = 0)
}
df
}
prep_for_svm(chile_student_school_11)
prep_for_svm <- function(df){
svm_factors <- df %>%
select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df[svm_factors[i]] <- sapply(df[svm_factors[i]], function(x){
str_c(i, '_', x)
})
df %>%
mutate(count = 1) %>%
spread_(svm_factors[i], 'count', fill = 0)
}
df
}
for(i in css_factors){
cat(paste(i, '\n'))
}
prep_for_svm(chile_student_school_11)
prep_for_svm <- function(df){
svm_factors <- df %>%
select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df[svm_factors[i]] <- sapply(df[svm_factors[i]], function(x){
str_c(i, '_', x)
})
df <- df %>%
mutate(count = 1) %>%
spread_(svm_factors[i], 'count', fill = 0)
}
df
}
prep_for_svm(chile_student_school_11)
prep_for_svm(chile_student_school_11) %>% summary()
chile_student_school_11_svmprep <- prep_for_svm(chile_student_school_11)
chile_student_school_11_svmprep
svm_model_student_school <- analyze_model(chile_student_school_11_svmprep, timss_student_svm)
svm_model_student_school
svm_model_student_school_adjusted <- analyze_model(prep_for_svm(chile_student_school_adjusted_11), timss_student_svm)
svm_model_student_school_adjusted
str(chile_student_teacher_11)
prep_for_svm <- function(df, cols2ignore){
svm_factors <- df %>%
select_(.dots = -c(cols2ignore))
#    select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df[svm_factors[i]] <- sapply(df[svm_factors[i]], function(x){
str_c(i, '_', x)
})
df <- df %>%
mutate(count = 1) %>%
spread_(svm_factors[i], 'count', fill = 0)
}
df
}
chile_student_school_11_svmprep <- prep_for_svm(chile_student_school_11, c('IDSTUD', 'ITSEX', 'benchmark_math_avg_value'))
prep_for_svm <- function(df, cols2ignore){
svm_factors <- df %>%
select_(.dots = names(.)[!(names(.) %in% cols2ignore)])
#    select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df[svm_factors[i]] <- sapply(df[svm_factors[i]], function(x){
str_c(i, '_', x)
})
df <- df %>%
mutate(count = 1) %>%
spread_(svm_factors[i], 'count', fill = 0)
}
df
}
chile_student_school_11_svmprep <- prep_for_svm(chile_student_school_11, c('IDSTUD', 'ITSEX', 'benchmark_math_avg_value'))
![true]
!true
!T
!(F, F, T)
![T,F, T]
not T
x = (1, 2, 3)
x
!c(T, T, F)
!(c(1,2,3) %in% c(2,3,4))
names(chile_student_school_11)
names(chile_student_school_11)
names(chile_student_school_11) %in% c('IDSTUD', 'ITSEX', 'benchmarkd_math_avg_value')
!names(chile_student_school_11) %in% c('IDSTUD', 'ITSEX', 'benchmarkd_math_avg_value')
names(chile_student_school_11)!names(chile_student_school_11) %in% c('IDSTUD', 'ITSEX', 'benchmarkd_math_avg_value')
names(chile_student_school_11)[!names(chile_student_school_11) %in% c('IDSTUD', 'ITSEX', 'benchmarkd_math_avg_value')]
names(chile_student_school_11)[!names(chile_student_school_11) %in% c('IDSTUD', 'ITSEX', 'benchmark_math_avg_value')]
prep_for_svm <- function(df, cols2ignore){
svm_factors <- df %>%
select_(.dots = names(.)[!names(.) %in% cols2ignore])
#    select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df[svm_factors[i]] <- sapply(df[svm_factors[i]], function(x){
str_c(i, '_', x)
})
df <- df %>%
mutate(count = 1) %>%
spread_(svm_factors[i], 'count', fill = 0)
}
df
}
chile_student_school_11_svmprep <- prep_for_svm(chile_student_school_11, c('IDSTUD', 'ITSEX', 'benchmark_math_avg_value'))
prep_for_svm <- function(df, cols2ignore){
svm_factors <- df %>%
select_(.dots = names(.)[!names(.) %in% cols2ignore]) %>%
#    select(-IDSTUD, -ITSEX, -benchmark_math_avg_value) %>%
Filter(f = is.factor) %>%
names()
for(i in seq_along(svm_factors)){
df[svm_factors[i]] <- sapply(df[svm_factors[i]], function(x){
str_c(i, '_', x)
})
df <- df %>%
mutate(count = 1) %>%
spread_(svm_factors[i], 'count', fill = 0)
}
df
}
chile_student_school_11_svmprep <- prep_for_svm(chile_student_school_11, c('IDSTUD', 'ITSEX', 'benchmark_math_avg_value'))
chile_student_school_11_svmprep
svm_model_student_school_adjusted <- analyze_model(prep_for_svm(chile_student_school_adjusted_11, c('IDSTUD', 'ITSEX', 'benchmark_math_avg_value')), timss_student_svm)
svm_model_student_school_adjusted
str(chile_student_teacher_11)
svm_model_student_teacher <- analyze_model(prep_for_svm(chile_student_teacher_11, c('IDSTUD', 'ITSEX', 'benchmark_math_avg_value')), timss_student_svm)
svm_model_student_teacher
svm_model_student_teacher_adjusted <- analyze_model(prep_for_svm(chile_student_teacher_adjusted_11, c('IDSTUD', 'ITSEX', 'benchmark_math_avg_value')), timss_student_svm)
svm_model_student_teacher_adjusted
str(chile_student_student_11)
chile_student_school_11_svmprep
svm_model_student_student <- analyze_model(prep_for_svm(chile_student_student_11, c('IDSTUD', 'ITSEX', 'benchmark_math_avg_value')), timss_student_svm)
str(chile_student_student_11)
svm_model_student_student <- analyze_model(prep_for_svm(chile_student_student_11, c('IDSTUD', 'ITSEX', 'benchmark_math_avg_value', 'IDSCHOOL')), timss_student_svm)
svm_model_student_student
svm_model_student_student_adjusted <- analyze_model(prep_for_svm(chile_student_student_adjusted_11, c('IDSTUD', 'ITSEX', 'benchmark_math_avg_value', 'IDSCHOOL')), timss_student_svm)
svm_model_student_student_adjusted
str(chile_all_11)
svm_model_all <- analyze_model(prep_for_svm(chile_all_11, c('IDSTUD', 'ITSEX', 'benchmark_math_avg_value')), timss_student_svm)
svm_model_all
svm_model_all_adjusted <- analyze_model(prep_for_svm(chile_all_11_adjusted, c('IDSTUD', 'ITSEX', 'benchmark_math_avg_value')), timss_student_svm)
svm_model_all_adjusted
require(tree)
require(randomForest)
tree_model = chile_all_11 %>%
select(-IDSCHOOL) %>%
.[sample(1:(nrow(.)-1)),]
tree_model
dim(tree_model)
dim(chile_all_11)
tree.timss = tree(benchmark_math_avg_value~.-IDSTUD, data = tree_model)
summary(tree.timss)
plot(tree.timss)
text(tree.timss, pretty=0)
train <- sample(1:nrow(tree_model), nrow(tree_model)/2)
timss_tree_test <- tree_model[-train,]
test_benchmark <- tree_model$benchmark_math_avg_value[train]
train <- sample(1:nrow(tree_model), nrow(tree_model)/2)
timss_tree_test <- tree_model[-train,]
test_benchmark <- tree_model$benchmark_math_avg_value[train]
tree.timss <- tree(benchmark_math_avg_value~.-IDSTUD, data = tree_model, subset = train)
tree.pred = predict(tree.timss, timss_tree_test, type = 'class')
table(tree.pred, test_benchmark)
cv.timss <- cv.tree(tree.timss, FUN = prune.misclass)
cv.timss
prune.timss = prune.misclass(tree.timss, best = 3)
tree.pred = predict(prune.timss, timss_tree_test, type = 'class')
table(tree.pred, test_benchmark)
prune.timss = prune.misclass(tree.timss, best = 1)
tree.pred = predict(prune.timss, timss_tree_test, type = 'class')
table(tree.pred, test_benchmark)
prune.timss = prune.misclass(tree.timss, best = 11)
tree.pred = predict(prune.timss, timss_tree_test, type = 'class')
cv.timss <- cv.tree(tree.timss, FUN = prune.misclass)
cv.timss
prune.timss = prune.misclass(tree.timss, best = 3)
tree.pred = predict(prune.timss, timss_tree_test, type = 'class')
table(tree.pred, test_benchmark)
prune.timss = prune.misclass(tree.timss, best = 5)
tree.pred = predict(prune.timss, timss_tree_test, type = 'class')
table(tree.pred, test_benchmark)
bag.timss <- randomForest(benchmark_math_avg_value~.-IDSTUD, data = tree_model, subset = train, mtry=13, importance=T)
bag.timss
student_general_codebook %>% fiter(FIELD_LABL == 'BSDGEDUP')
student_general_codebook %>% filter(FIELD_LABL == 'BSDGEDUP')
chile_student_general_11 %>% filter(FIELD_LABL == 'BSDGEDUP')
student_general_codebook$FIELD_LABL
student_general_codebook$FIELD_NAME
student_general_codebook %>% filter(FIELD_NAME == 'BSDGEDUP')
summary(tree.timss)
nrow(tree_model)
nrow(tree_model)/1.5
nrow(tree_model)/2
nrow(tree_model) * 3/4
train <- sample(1:nrow(tree_model), nrow(tree_model)*3/4)
timss_tree_test <- tree_model[-train,]
test_benchmark <- tree_model$benchmark_math_avg_value[-train]
tree.timss <- tree(benchmark_math_avg_value~.-IDSTUD, data = tree_model, subset = train)
tree.pred = predict(tree.timss, timss_tree_test, type = 'class')
table(tree.pred, test_benchmark)
(140+33+29)/length(test_benchmark)
length(test_benchmark)
cv.timss
cv.timss <- cv.tree(tree.timss, FUN = prune.misclass)
cv.timss
cv.timss
prune.timss = prune.misclass(tree.timss, best = 3)
plot(prune.timss)
text(prune.timss, pretty = 0)
teacher_codebook %>% filter(FIELD_NAME == 'BTBG16A')
tree.pred = predict(prune.timss, timss_tree_test, type = 'class')
table(tree.pred, test_benchmark)
tree.pred = predict(prune.timss, timss_tree_test, type = 'class')
table(tree.pred, test_benchmark)
(140 + 33+29)/length(test_benchmark)
library(MASS)
summary(tree.timss)
detach(package:MASS)
tree_model
nrow(tree_model)
bag.timss
bag.timss <- randomForest(benchmark_math_avg_value~.-IDSTUD,
data = tree_model,
subset = train, mtry=13,
importance=T)
bag.timss
names(tree_model)
dim(tree_model)
bag.timss <- randomForest(benchmark_math_avg_value~.-IDSTUD,
data = tree_model,
subset = train, mtry=36,
importance=T)
bag.timss
yhat.bag = predict(bag.timss, newdata = tree_model[-train,])
plot(yhat.bag, timss_tree_test)
length(yhat.bag)
length(timss_tree_test)
timss_tree_test
nrow(timss_tree_test)
length(yhat.bag)
plot(yhat.bag, timss_tree_test$benchmark_math_avg_value)
yhat.bag = predict(bag.timss, newdata = tree_model[-train,])
plot(yhat.bag, timss_tree_test$benchmark_math_avg_value)
plot(yhat.bag, timss_tree_test$benchmark_math_avg_value)
bag.timss = randomForest(benchmark_math_avg_value~.-IDSTUD,
data = tree_model,
subset = train,
mtry = 36,
ntree=25)
bag.timss = randomForest(benchmark_math_avg_value~.-IDSTUD,
data = tree_model,
subset = train,
mtry = 36,
ntree=25)
yhat.bag = predict(bag.timss, newdata = tree_model[-train,])
mean((yhat.bag-timss_tree_test$benchmark_math_avg_value)^2)
yhat.bag
table(yhat.bag, timss_tree_test$benchmark_math_avg_value)
table(yhat.bag, timss_tree_test$benchmark_math_avg_value)
(1 + 90 + 19 + 32 + 67)/nrow(timss_tree_test)
rf.timss = randomForest(benchmark_math_avg_value~.-IDSTUD,
data = tree_model,
subset = train,
mtry = 18,
importance = T)
yhat.rf = predict(rf.timss, newdata = tree_model[-train,])
table(yhat.rf, timss_tree_test$benchmark_math_avg_value)
(1+95+16+39+77)/nrow(timss_tree_test)
importance(rf.timss)
varImpPlot(rf.timss)
school_codebook %>% filter(FIELD_NAME == 'BCBG02' | FIELD_NAME == 'BCBG07')
school_codebook %>% filter(FIELD_NAME == 'BSBG11D' | FIELD_NAME == 'BSBG11A')
student_general_codebook %>% filter(FIELD_NAME == 'BSBG11D' | FIELD_NAME == 'BSBG11A')
library(gbm)
boost.timss <- gbm(benchmark_math_avg_value~.-IDSTUD,
data = tree_model[train,],
distribution = 'gaussian',
trees = 5000,
interaction.depth = 4)
boost.timss <- gbm(benchmark_math_avg_value~.-IDSTUD,
data = tree_model[train,],
distribution = 'gaussian',
n.trees = 5000,
interaction.depth = 4)
summary(boost.timss)
summary(boost.timss)
plot(boost.timss, i = 'rm')
plot(boost.timss, i = 'lstat')
yhat.boost = predict(boost.timss, newdata = tree_model[-train,])
boost.timss <- gbm(benchmark_math_avg_value~.-IDSTUD,
data = tree_model[train,],
distribution = 'gaussian',
n.trees = 5000,
interaction.depth = 4)
yhat.boost = predict(boost.timss,
newdata = tree_model[-train,],
n.trees = 5000)
table(yhat.boost, timss_tree_test$benchmark_math_avg_value)
table(yhat.boost, timss_tree_test$benchmark_math_avg_value)
summary(yhat.boost)
str(yhat.boost)
yhat.boost
table(yhat.boost, timss_tree_test$benchmark_math_avg_value)
table(yhat.rf, timss_tree_test$benchmark_math_avg_value)
boost.timss =gbm(benchmark_math_avg_value~.-IDSTUD,
data = tree_model[train,],
distribution = 'gaussian',
n.trees = 5000,
interaction.depth = 4,
shrinkage = .2,
verbose = F)
yhat.boost = predict(boost.timss,
newdata = tree_model[-train,],
n.trees = 5000)
yhat.boost
summary(boost.timss)
pretty.gbm.tree(boost.timss)
yhat.boost = predict.gbm(boost.timss,
newdata = tree_model[-train,],
n.trees = 5000)
yhat.boost
yhat.boost = predict.gbm(boost.timss,
newdata = tree_model[-train,],
n.trees = 5000,
type = 'response')
yhat.boost
